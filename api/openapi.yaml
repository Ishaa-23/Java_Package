openapi: 3.0.0
info:
  description: Endpoints of CRUD of employee and displaying results of student.
  title: Combined API
  version: 1.0.0
servers:
- description: Employee Crud
  url: http://localhost:5283
- description: Student details
  url: http://localhost:5093
paths:
  /api/Employee:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          text/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/Employee'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Employee'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Employee'
                type: array
          description: Success
      summary: Adds new employee
      tags:
      - Employee
      x-content-type: application/json
      x-accepts: application/json
  /api/Employee/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/Employee'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Employee'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Employee'
                type: array
          description: Success
      tags:
      - Employee
      x-accepts: application/json
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/Employee'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Employee'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Employee'
                type: array
          description: Success
      summary: Returns employee of given id
      tags:
      - Employee
      x-accepts: application/json
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          text/plain:
            schema:
              items:
                $ref: '#/components/schemas/Employee'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Employee'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Employee'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/Employee'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Employee'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Employee'
                type: array
          description: Success
      summary: Updates employee details
      tags:
      - Employee
      x-content-type: text/plain
      x-accepts: application/json
  /api/Student:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/Student'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Student'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Student'
                type: array
          description: Success
      servers:
      - url: http://localhost:5093
      summary: Returns all student details
      tags:
      - Student
      x-accepts: application/json
  /api/Student/{id}:
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/Student'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Student'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Student'
                type: array
          description: Success
      servers:
      - url: http://localhost:5093
      summary: Returns student of given id
      tags:
      - Student
      x-accepts: application/json
components:
  schemas:
    Employee:
      example:
        name: name
        id: 0
        age: 6
      properties:
        id:
          type: integer
        name:
          type: string
        age:
          type: integer
      type: object
    Student:
      example:
        name: name
        id: 0
        age: 6
      properties:
        id:
          type: integer
        name:
          type: string
        age:
          type: integer
      type: object

